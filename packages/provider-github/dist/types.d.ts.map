{"mappings":"AAKA,uCAAuC,MAAM,KAAA;;;;;;;;;EAmC5C","sources":["packages/provider-github/src/src/index.ts","packages/provider-github/src/index.ts"],"sourcesContent":[null,"import process from \"node:process\";\n\nimport { GITHUB_PATH } from \"@pforte/constants\";\nimport axios from \"axios\";\n\nexport default function githubProvider(config) {\n\tconst host = process.env.PFORTE_URL || process.env.VERCEL_URL || \"http://localhost:3000\";\n\tconst redirectUri = [host, GITHUB_PATH].join(\"/\");\n\tconst { clientId, clientSecret } = config;\n\treturn {\n\t\turl: `https://github.com/login/oauth/authorize?scope=user&client_id=${clientId}&redirect_uri=${redirectUri}`,\n\t\tname: \"github\",\n\t\tasync connect({ request }) {\n\t\t\t// Get access token\n\t\t\tconst { data: accessToken } = await axios.post(\n\t\t\t\t\"https://github.com/login/oauth/access_token\",\n\t\t\t\t{},\n\t\t\t\t{\n\t\t\t\t\tparams: {\n\t\t\t\t\t\tclient_id: clientId,\n\t\t\t\t\t\tclient_secret: clientSecret,\n\t\t\t\t\t\tredirect_uri: redirectUri,\n\t\t\t\t\t\tcode: request.query.code,\n\t\t\t\t\t},\n\t\t\t\t\theaders: {\n\t\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\t},\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// Get user with access token\n\t\t\tconst { data: user } = await axios.get(\"https://api.github.com/user\", {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: `token ${accessToken.access_token}`,\n\t\t\t\t},\n\t\t\t});\n\n\t\t\treturn { user, accessToken };\n\t\t},\n\t};\n}\n"],"names":[],"version":3,"file":"types.d.ts.map"}