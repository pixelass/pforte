{"mappings":"AAUA,2CAeC;AAED,uBAA6B,QAAQ,KAAA,iBAapC;AAED,yCAEC","sources":["packages/client/src/src/index.ts","packages/client/src/index.ts"],"sourcesContent":[null,"import {\n\tAUTH_CSRF_COOKIE,\n\tAUTH_SESSION_COOKIE,\n\tSESSION_PATH,\n\tSIGNIN_PATH,\n\tSIGNOUT_PATH,\n} from \"@pforte/constants\";\nimport axios from \"axios\";\nimport Cookies from \"js-cookie\";\n\nexport async function getSession() {\n\tconst sessionToken = Cookies.get(AUTH_SESSION_COOKIE);\n\tif (sessionToken) {\n\t\tconst csrfToken = Cookies.get(AUTH_CSRF_COOKIE);\n\t\ttry {\n\t\t\tconst { data } = await axios.post(`/${SESSION_PATH}`, {\n\t\t\t\tsessionToken,\n\t\t\t\tcsrfToken,\n\t\t\t});\n\t\t\treturn data.data;\n\t\t} catch (error) {\n\t\t\treturn null;\n\t\t}\n\t}\n\treturn null;\n}\n\nexport async function signIn(provider) {\n\tconst session = await getSession();\n\tif (!session) {\n\t\ttry {\n\t\t\tconst { data } = await axios.get(`/${SIGNIN_PATH}`, { params: { provider } });\n\t\t\twindow.location.href = data.url;\n\t\t\tif (data.url.includes(\"#\")) {\n\t\t\t\twindow.location.reload();\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n}\n\nexport async function signOut() {\n\twindow.location.pathname = `/${SIGNOUT_PATH}`;\n}\n"],"names":[],"version":3,"file":"types.d.ts.map"}